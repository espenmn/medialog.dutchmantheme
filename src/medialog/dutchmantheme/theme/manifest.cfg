[theme]
title = Plone Theme: Dutchman theme
description = A configurable theme for Plone 6
preview = preview.png
rules = /++theme++dutchman-theme/rules.xml
prefix = /++theme++dutchman-theme
doctype = <!DOCTYPE html>

enabled-bundles =
disabled-bundles =

# production-css = ++theme++dutchman-theme/styles/theme.min.css
# tinymce-content-css = /++theme++dutchman-theme/styles/theme.min.css

 

# production-js = ++theme++dutchman-theme/js/theme-compiled.js

#[theme:overrides]
#directory = template-overrides


[theme:parameters]
portal_url = portal_state/portal_url
js_head =    python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.jsheading']
js_footer =  python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.jsfooter']
cssfile =    python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.style']
barceloneta = python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.rules']=='barceloneta'
diazo_on =   python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.rules']!='disabled'
diazo_off =  python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.rules']=='disabled'
default =    python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.rules']=='default'
default_old = python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.rules']=='default_old'
spot =       python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.rules']=='spot'
spot_2 =     python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.rules']=='spot_2'
head =       python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.rules']=='head'
fullmenu =   python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.rules']=='fullmenu'
fullmenu_l = python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.rules']=='fullmenu_l'
color1 =     python:str(portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.color1'])
color2 =     python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.color2']
color3 =     python:portal_state.portal().portal_registry['medialog.dutchmantheme.interfaces.IMedialogDutchmanThemeSettings.color3']
ajax_load =  python:request.form.get('ajax_load')


[theme:themefragments:tiles]
accordian_block = Block: Accordian
button = -Button
greybanner = Block: Color banner
post = -Post
divider = Block: Divider (line)
events = Content Type View: Events
events_folderview = Folder View: Events
fact_block = Block: Fact
feature-2 = Block: Feature 2
news = Content View: Sorted Items
hover = Content and Folder View: Hover Image Effect
colorbox = To do: Colorbox
quote = Block: Quote
cards-masonry = Keyword View: Cards Masonry
cards = Keyword View: Cards
card = -Card
banner = Block: Banner
clear_floats = -Clear Floats (Spacer)
circular_menu = Menu: Circular Menu
collection_slider = Folder view: Collection Slider
collection_view_1 = Folder view: Collection View
contentload = Block: Content Load
countdown = Block: Countdown
counter = Block: Counter
counters = Folder view: Counters
css = Layout: CSS styling
dropboxview = Folder view: Grid View
feature = Block: Feature
features =  Keyword view: Features
features2 =  Keyword view: Features2 (with image)
folder_contentload = Folder view: Contentload
folderlisting = Content Listing: Card listing
hide_breadcrumbs = Layout: Hide breadcrumbs
imageswall = Folder view: Imageswall
iframe = Media: Iframe (Youtube etc)
info_block = Block: Info
intouch = Block: Intouch
lr_block = Block: Left/Right
lr_blocks = Folder view: Left/Right
news_slider = Content view: News Slider
parallax_block = Block: Parallax
pat-inject = -Pat Inject fragment
pdfgallery = Folder view: PDF gallery
portlets_left = Fragment: Portlets left
portlets_right = Fragment: Portlets right
richtext_block = Block: Richtext with button
search = Block: Search
services_new = Folder view: Services
services = _Old: Services
slider = Folder view: Slider
social_block = Block: Social Block
select = Content Listing: Select
testemoniants = Folder view: Testemoniants
textblock= Block: TextBlock (service)
service = -Service
image_compare = Media:  Before/After Image
innhold_news = Content View: Fragment with slide down
custom_leadimage = Media: Leadimage with custom size for current content
simple_leadimage = Media: Leadimage with imagesize for current content
buyable = #Hidden: To do-buyable
to_do_gallery = #To_do: Gallery
confirmaciones = #Hidden-Slider view for content type 'Movies'
customcss = #Hidden: customcss
fullpage_menu = #Hidden: fullpage menu
gallery = #Hidden: To do: Gallery (will work in Plon 5.2)
header = #Hidden: Header
innhold= #Hidden: To do -News items (4) with slide down
livesearch = #Hidden: Livesearch
shoplist = #Hidden: To do-shoplist
socialtop = #Hidden-Social Top
sticky = Layout: Sticky javascript
structure_abovecontent = #Hidden-Structure-Abovecontent
structure_abovecontentttitle = #Hidden- Structure-Abovecontent title
structure_belowcontentbody = #Hidden-Structure-Belowcontentbody
tabbed_content = Fragment: Tabbed content
titleblock = Block: Title Block
to_do_floorplan = #Hidden-To do floorplan
to_do_tal = #TodoTAL
quicksand = #hidden: to_do-quicksand
parallax_image = Block: Parallax image
math = Layout: enables Latex math
highlight = Block: Highlighting code block
